A document used for part of this project's build strategies.

bytecode consists of a vector of instructions for the script machine to execute
the lexicon scans the script to construct a vector of tokens from a string of characters
the parser parses the vector of tokens to construct bytecode
the script machine will execute the vector of bytecode
the script engine manages all script-related things
the script environment is the frame for which a script machine can use to execute code
a stack is mandatory for the script environment
function calls can have a return value that will be pushed onto the stack
function calls push a return value to the stack when parsed as expressions
task calls start a separate coroutine
Callback functions will be implemented and integrated for script compatibility
#include will be handled through parsing, scanning the current scope sets the export symbols and parsing defines them
#include will automatically #pragma once
if a file has been parsed before, the export (top-level routines) symbols will be imported to save memory and time