A document used for part of this project's build strategies.

bytecode consists of a vector of instructions for the script machine to execute
the lexicon scans the script to construct a vector of tokens from a string of characters
the parser parses the vector of tokens to construct bytecode
the script machine will execute the vector of bytecode
the script engine manages all script-related things
the script environment is the frame for which a script machine can use to execute code
a stack is mandatory for the script environment
function calls can have a return value that will be pushed onto the stack
function calls push a return value to the stack when parsed as expressions
task calls start a separate coroutine
Callback functions will be implemented and integrated for script compatibility
#include will be handled through parsing, scanning the current scope sets the export symbols and parsing defines them
#include will automatically #pragma once
if a file has been parsed before, the export (top-level routines) symbols will be imported to save memory and time


-- some fixes needed with the script engine
[X] the battery, instead of using a map-key container to directly refer to script_routine_cont using a
 string, use a second container (a vector of routine_cont) and have the map value type allow to refer to that.
This will save space for the script_machine_cont container, it holding merely an offset (or in the script_machine itself, preferably).
[x] Implement cleaning functions to clean and and all resources in any possible conditions (normal engine shut-down, emergency engine shut-down, and clean all things associated)

-- some fixes needed with the script machine
[X] Implement the advance() function for the script machine to operate as a virtual machine
[x] Implement two ways for the machine to clean itself: one operating with @Finalize before cleanup and one without

-- some fixes needed with the parser

[x] Prepare for parsing files determined by the user via DirectX interface instead of GetOpenFile() using Explorer
[x] Operational testing of all functions, loops, subfunctions, script calls
[X] parser::parseInclude should be parser::parseDocument

-- other notes

game dimensions: 640 x 480
STG rect ( 32, 16, 416, 464 )
