//A TH_DH sample script, early project
#TouhouDanmaku[single] //preprocessor to let the parser know this script is intended for TH-DH, must be within first 512 characters
                          //optional : [single] anonymous is a script enemy, [stage] anonymous is a stage, []/void - assumed [single]
#include ".\functions.th" //preprocessor for including external scripts

function foo( let val )
{
}

script_main main_script //main routine
{
	//@[routine name][no args] <- events are routines called during notable events
	@Initialize //routine called when the script machine initializes a new script
	{
		LoadUserShotData( "C:\Users\Administrator\Documents\Visual Studio 2010\Projects\TH Game\TH Game\trunk\resources\script\ShotData.th" );
		Task();
		TestObj();
	}
	@MainLoop //routine called every frame post-Initialize
	{
		yield;
	}
	@Finalize //routine called when the script machine terminates this script
	{
	}
	//@DrawLoop omitted, SetEnemyGraphic() functions will be used to call that
	@BackGround //routine called when the script is a stage
	{
	}
}

task Task()
{
	loop
	{
		let a = 0;
		let looper = rand_int( 10, 40 );
		let x = rand_int( 100, 500 );
		let y = rand_int( 0, 100 );
		loop( looper )
		{
			CreateShot01( x, y, 1, a, rand_int(0,2) );
			a = a + 2 * 3.1415926 / looper;
		}
		loop( rand_int( 5, 25) ){ yield; }
	}
}

task TestObj()
{
	let obj = Obj_Create( 5 );
	LoadTexture( "etama.png" );
	Obj_SetTexture( obj, "etama.png" );

	Obj_CreateVertex( obj, 6 );
	Obj_SetPrimitiveType( obj, PRIMITIVE_TRIANGLELIST );
	Obj_SetRenderState( obj, ALPHA_BLEND );

	Obj_SetVertexUV( obj, 0, 0, 0 );
	Obj_SetVertexUV( obj, 1, 1, 0 );
	Obj_SetVertexUV( obj, 2, 0, 1 );
	Obj_SetVertexUV( obj, 3, 1, 0 );
	Obj_SetVertexUV( obj, 4, 1, 1 );
	Obj_SetVertexUV( obj, 5, 0, 1 );

	Obj_SetVertexXY( obj, 0, -128, -128 );
	Obj_SetVertexXY( obj, 1, 128, -128 );
	Obj_SetVertexXY( obj, 2, -128, 128 );
	Obj_SetVertexXY( obj, 3, 128, -128 );
	Obj_SetVertexXY( obj, 4, 128, 128 );
	Obj_SetVertexXY( obj, 5, -128, 128 );

	Obj_SetVertexColor( obj, 0, 255, 255, 255, 255 );
	Obj_SetVertexColor( obj, 1, 255, 255, 255, 255 );
	Obj_SetVertexColor( obj, 2, 255, 255, 255, 255 );
	Obj_SetVertexColor( obj, 3, 255, 255, 255, 255 );
	Obj_SetVertexColor( obj, 4, 255, 255, 255, 255 );
	Obj_SetVertexColor( obj, 5, 255, 255, 255, 255 );

	Obj_SetLayer( obj, 7 );
	Obj_SetVelocity( obj, cos( 0 ), sin( 0 ), 0 );
	Obj_SetAngle( obj, 3.14159 / 2 );
	Obj_SetPosition( obj, 100, 100, 0 );
	Obj_SetVelocity( obj, cos( 0 ), sin ( 0 ), 0 );
	Obj_SetAngle( obj, 3.14159265/2 );
	wait( 60 );
	Obj_Delete( obj );
	

}
function wait( let v )
{
	loop( v )
	{
		yield;
	}
}
script_enemy youkai
{
	@Initialize
	{
		print( "youkai got called!" );
	}
	@MainLoop
	{
		print( "youkai advances!" );
	}
}